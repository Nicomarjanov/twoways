<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE sqlMap PUBLIC "-//iBATIS.com//DTD SQL Map 2.0//EN" "http://www.ibatis.com/dtd/sql-map-2.dtd">

<!-- Place filename in namespace field value without extension (.xml) -->
<sqlMap namespace="twowaysMap">
  <!--- Clientes -->
  <select id="obtenerClientes"  parameterClass="java.lang.String" resultClass="com.twoways.to.ClientsTO">
     select 
        CLI_ADDRESS as cliAddress,
        CLI_COUNTRY as cliCountry,
        CLI_DESCRIPTION as cliDescription,
        CLI_ID as  cliId,
        CLI_MAIL as cliMail,
        CLI_NAME as cliName,
        CLI_PHONE as cliPhone,
        CLI_POSTAL_CODE as cliPostalCode          
     from 
     Clients 
     
  </select>  
  
  <resultMap id="select-Client" class="com.twoways.to.ClientsTO" >
      <result property="cliAddress" column="CLI_ADDRESS" />
      <result property="cliDescription" column="CLI_DESCRIPTION"/>
      <result property="cliCountry"   column="CLI_COUNTRY" />
      <result property="cliId" column="CLI_ID"  />
      <result property="cliName" column="CLI_NAME" />
      <result property="cliPhone" column="CLI_PHONE" />
      <result property="cliPostalCode" column="CLI_POSTAL_CODE" />
      <result property="cliMail" column="CLI_MAIL" />
      <result property="currencyTO.curId" column="cur_id" />
      <result property="currencyTO.curName" column="cur_Name" />
    </resultMap>
    
    <resultMap id="select-Client-List" class="com.twoways.to.ClientsTO" >
      <result property="cliAddress" column="CLI_ADDRESS" />
      <result property="cliDescription" column="CLI_DESCRIPTION"/>
      <result property="cliCountry"   column="CLI_COUNTRY" />
      <result property="cliId" column="CLI_ID"  />
      <result property="cliName" column="CLI_NAME" />
      <result property="cliPhone" column="CLI_PHONE" />
      <result property="cliPostalCode" column="CLI_POSTAL_CODE" />  
      <result property="cliMail" column="CLI_MAIL" /> 
    </resultMap>
  
 <statement  id="getClientById" resultMap="select-Client" parameterClass="java.lang.String" >
     select *       
     from clients left outer join currency on clients.currency_cur_id = currency.cur_id
     where cli_id = #value#
 </statement>
 
  <statement id="buscarClientes" resultMap="select-Client-List"  parameterClass="java.lang.String" >
     select *       
     from clients left outer join currency on clients.currency_cur_id = currency.cur_id
     where upper(clients.CLI_NAME) like '%' || upper(#value#) || '%'
     
     
  </statement>

  <select  id="clients.seq" resultClass="java.lang.Long" parameterClass="java.lang.String" > select client_seq.nextval  cliId from dual</select> 
        
 
  <insert id="insertClients" parameterClass="com.twoways.to.ClientsTO"   >
       
      insert into clients
          (cli_id, cli_name, cli_description, cli_mail, cli_address, cli_phone, cli_country, cli_postal_code,currency_cur_id)
        values
          (#cliId#, #cliName#, #cliDescription#, #cliMail#, #cliAddress#, #cliPhone#, #cliCountry#, #cliPostalCode#,#currencyTO.curId#)
         
  </insert>
  
  <update  id="updateClients" parameterClass="com.twoways.to.ClientsTO">
      UPDATE clients
      SET     cli_name = #cliName# , 
              cli_description = #cliDescription#,
              cli_mail = #cliMail#,
              cli_address = #cliAddress#  ,
              cli_phone =  #cliPhone# ,
              cli_country = #cliCountry# ,
              cli_postal_code =#cliPostalCode# ,
              currency_cur_id= #currencyTO.curId#
              WHERE  cli_id = #cliId#                     
  </update>
  
  <delete id="deleteClients" parameterClass="com.twoways.to.ClientsTO">
        DELETE Clients
        WHERE  cli_id = #cliId#    
 </delete>
  
  
  <!--Empleados-->

    <resultMap id="select-Employee" class="com.twoways.to.EmployeesTO" >
      <result property="empAddress" column="EMP_ADDRESS" />
      <result property="empAvailability" column="EMP_AVAILABILITY"/>
      <result property="empBirth"   column="EMP_BIRTH" />
      <result property="empFirstName" column="EMP_FIRST_NAME"  />
      <result property="empLastName" column="EMP_LAST_NAME" />
      <result property="empLocation" column="EMP_LOCATION" />
      <result property="empMail" column="EMP_MAIL" />  
      <result property="empMobileNumber" column="EMP_MOBILE_NUMBER" /> 
      <result property="empMsn" column="EMP_MSN" /> 
      <result property="empObservations" column="EMP_OBSERVATIONS" /> 
      <result property="empPhoneNumber" column="EMP_PHONE_NUMBER" />      
    </resultMap>
  
  <select id="obtenerEmpleados"  resultMap="select-Employee" parameterClass="java.lang.String">
     select *      
     from 
     Employees
     
  </select>
  
 <statement  id="getEmpById" resultMap="select-Employee" parameterClass="java.lang.String" >
     select *       
     from employee
     where emp_id = #value#
 </statement>
 
  <statement id="buscarEmpleados" resultMap="select-Employee"  parameterClass="java.lang.String" >
     select *       
     from employee 
     where upper(EMP_FIRST_NAME) like '%' || upper(#value#) || '%'

  </statement>

  <select  id="employees.seq" resultClass="java.lang.Long" parameterClass="java.lang.String" > select employee_seq.nextval  empId from dual</select> 
        
 
  <insert id="insertEmployees" parameterClass="com.twoways.to.EmployeesTO"   >
       
      insert into employees
          (emp_id, emp_first_name, emp_last_name, emp_availability, emp_mail, emp_msn, emp_address, emp_phone_number, emp_mobile_number, emp_location, emp_birth,emp_observations)
        values
          (#empId#, #empFirstName#, #empLastName#, #empAvailability#, #empMail#, #empMsn#, #empAddress#, #empPhoneNumber#, #empMobileNumber#, #empLocation#, #empBirth#, #empObservations#)
         
  </insert>
  
  <update  id="updateEmployees" parameterClass="com.twoways.to.EmployeesTO">
      UPDATE employees
      SET     emp_first_name = #empFirstName# , 
              emp_last_name = #empLastName# , 
              emp_availability = #empAvailability#,
              emp_mail = #empMail#,
              emp_msn = #empMsn#  ,
              emp_address =  #empAddress# ,
              emp_phone_number = #empPhoneNumber# ,
              emp_mobile_number =#empMobileNumber# ,
              emp_location= #empLocation#
              emp_birth = #empBirth#
              emp_observations = #empObservations#
              WHERE  emp_id = #empId#                     
  </update>
  
  <delete id="deleteEmployee" parameterClass="com.twoways.to.EmployeesTO">
        DELETE Employees
        WHERE  emp_id = #empId#    
 </delete>     
     
  <!--Monedas -->
 
  <resultMap id="select-Currency" class="com.twoways.to.CurrencyTO" >
       
      <result property="curId" column="cur_id" />
      <result property="curName" column="cur_Name" />
  </resultMap> 
   
  <statement  id="getCurrencyId" resultMap="select-Currency"  parameterClass="java.lang.Integer" >
     select *    
     from 
     Currency
     where cur_id = #value#
  </statement>   
 
  <statement id="obtenerMonedas"  parameterClass="java.lang.String" resultMap="select-Currency" >
     select *    
     from 
     Currency
     
  </statement>

<!--Tarifas-->
  
  <resultMap id="select-Rate-List" class="com.twoways.to.RatesTO" >
      <result property="ratId" column="RAT_ID" />
      <result property="ratDescription" column="RAT_DESCRIPTION"/>
      <result property="ratName"   column="RAT_NAME" />
      <result property="rateTypesTO.rtyName" column="RAT_TYPE"  />
      <result property="currencyTO.curName" column="cur_Name" />    
      <result property="currencyTO.curId" column="cur_Id" />
  </resultMap>
  
  <select id="obtenerTarifas"  parameterClass="java.lang.String" resultClass="com.twoways.to.RatesTO">
     select 
        RAT_NAME as ratName,
        RAT_TYPE as ratType,
        RAT_DESCRIPTION as ratDescription,
        CUR_NAME as curName
     from 
     Rates r, Currency c
     where r.currency_cur_id = c.cur_id
     
  </select>

  <insert id="insertRate" parameterClass="com.twoways.to.RatesTO" >
      insert into rates
          (rat_id, rat_type, rat_name, rat_description,currency_cur_id)
        values
          (rates_seq.nextval, #rateTypesTO.rtyName#, #ratName#, #ratDescription#, #currencyTO.curId#)                        
  </insert>

  <update  id="updateRate" parameterClass="com.twoways.to.RatesTO">
      UPDATE rates
      SET     rat_name = #ratName# , 
              rat_description = #ratDescription#,
              rat_type = #rateTypesTO.rtyName#,
              currency_cur_id= #currencyTO.curId#
              WHERE  rat_id = #ratId#                     
  </update>  
  
  <select id="obtenerTipoTarifas"  parameterClass="java.lang.String" resultClass="com.twoways.to.RateTypesTO">
     select 
        RTY_NAME as rtyName,
        RTY_DESCRIPTION as rtyDescription
     from 
     Rate_Types
     
  </select>
    
 <select  id="getRatesByType" parameterClass="com.twoways.to.RateTypesTO" resultMap="select-Rate-List">
     select *
     from Rates r left outer  join Currency c on r.currency_cur_id = c.cur_id
     where rat_type = #rtyName#
 </select>   
    
 <select  id="getRateById" parameterClass="java.lang.String" resultMap="select-Rate-List">
     select *
     from Rates r left outer  join Currency c on r.currency_cur_id = c.cur_id
     where rat_id = #value#
 </select>

  <delete id="deleteRates" parameterClass="com.twoways.to.RatesTO">
        DELETE Rates
        WHERE  rat_id = #ratId#    
 </delete> 

  <statement id="buscarTarifas" resultMap="select-Rate-List"  parameterClass="java.lang.String" >
     select *       
     from rates, currency 
     where rates.currency_cur_id = currency.cur_id
     and upper(rates.RAT_NAME) like '%' || upper( #value#) || '%'
     order by rates.RAT_NAME
     
  </statement>

<!--Usuarios-->
  <resultMap id="select-User" class="com.twoways.to.UsersTO" >
      <result property="usrFirstName" column="USR_FIRST_NAME" />
      <result property="usrLastName" column="USR_LAST_NAME"/>
      <result property="usrId"   column="USR_ID" />
      <result property="usrMail" column="USR_MAIL"  />
      <result property="usrBirth" column="USR_BIRTH" />
      <result property="usrMobileNumber" column="USR_MOBILE_NUMBER" />
      <result property="usrOfficeNumber" column="USR_OFFICE_NUMBER" />  
      <result property="usrPhoneNumber" column="USR_PHONE_NUMBER" />
      <result property="rolesTO.rolId" column="rol_id" />
      <result property="rolesTO.rolName" column="rol_Name" />
  </resultMap>

  <select id="obtenerUsuarios"  resultMap="select-User" parameterClass="java.lang.String">
     select * 
       from Users , Roles
      where roles_rol_id=rol_id
     
  </select>  
  
  <statement  id="getUserById" resultMap="select-User" parameterClass="java.lang.String" >
     select *
       from users, Roles 
      where usr_id = #value#
        and roles_rol_id=rol_id
  </statement>
 
  <statement id="buscarUsuarios" resultMap="select-User"  parameterClass="java.lang.String" >
     select *       
     from users, Roles  
     where roles_rol_id=rol_id
     and upper(USR_NAME) like '%' || upper( #value#) || '%'
     
  </statement>

   
  <insert id="insertUser" parameterClass="com.twoways.to.UsersTO" >
      insert into users
          (USR_ID, USR_FIRST_NAME, USR_LAST_NAME, USR_MAIL, USR_BIRTH, USR_MOBILE_NUMBER, USR_OFFICE_NUMBER, USR_PHONE_NUMBER,roles_rol_id)
        values
          (client_seq.nextval, #usrFirstName#, #usrLastName#, #usrMail#, #usrBirth#, #usrMobileNumber#, #usrOfficeNumber#, #usrPhoneNumber#,#rolesTO.rolId#)
                            
  </insert>
  
   <update  id="updateUsers" parameterClass="com.twoways.to.UsersTO">
      UPDATE users
      SET     USR_FIRST_NAME = #usrFirstName# , 
              USR_LAST_NAME = #usrLastName#,
              USR_MAIL = #usrMail#,
              USR_BIRTH = #usrBirth#  ,
              USR_MOBILE_NUMBER =  #usrMobileNumber# ,
              USR_OFFICE_NUMBER = #usrOfficeNumber# ,
              USR_PHONE_NUMBER =#usrPhoneNumber# ,
              roles_rol_id= #rolesTO.rolId#
              WHERE  usr_id = #usrId#                     
  </update>
  
  <delete id="deleteUsers" parameterClass="com.twoways.to.UsersTO">
        DELETE Users
        WHERE  usr_id = #usrId#    
 </delete>

 <statement id="obtenerRoles"  resultClass="com.twoways.to.RolesTO" parameterClass="java.lang.String">
     select  rol_id as rolId,
             rol_Name as rolName, 
             rol_description as rolDescription 
     from Roles     
  </statement>  
  
  
  <statement id="getPass"  resultClass="java.lang.String" parameterClass="java.lang.String">
     select  usr_pass
     from  users 
     where usr_id = #value#      
  </statement>  
  
</sqlMap> 