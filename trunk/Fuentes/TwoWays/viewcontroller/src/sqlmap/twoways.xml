<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE sqlMap PUBLIC "-//iBATIS.com//DTD SQL Map 2.0//EN" "http://www.ibatis.com/dtd/sql-map-2.dtd">

<!-- Place filename in namespace field value without extension (.xml) -->
<sqlMap namespace="twowaysMap">
  <!--- Clientes -->
  <select id="obtenerClientes"  parameterClass="java.lang.String" resultClass="com.twoways.to.ClientsTO">
     select 
        CLI_ADDRESS as cliAddress,
        CLI_COUNTRY as cliCountry,
        CLI_DESCRIPTION as cliDescription,
        CLI_ID as  cliId,
        CLI_MAIL as cliMail,
        CLI_NAME as cliName,
        CLI_PHONE as cliPhone,
        CLI_POSTAL_CODE as cliPostalCode          
     from 
     Clients 
     WHERE CLI_ERASE_DATE is null
     
  </select>  
  
  <resultMap id="select-Client" class="com.twoways.to.ClientsTO" >
      <result property="cliAddress" column="CLI_ADDRESS" />
      <result property="cliDescription" column="CLI_DESCRIPTION"/>
      <result property="cliCountry"   column="CLI_COUNTRY" />
      <result property="cliId" column="CLI_ID"  />
      <result property="cliName" column="CLI_NAME" />
      <result property="cliPhone" column="CLI_PHONE" />
      <result property="cliPostalCode" column="CLI_POSTAL_CODE" />
      <result property="cliMail" column="CLI_MAIL" />
      <result property="currencyTO.curId" column="cur_id" />
      <result property="currencyTO.curName" column="cur_Name" />
    </resultMap>
    
    <resultMap id="select-Client-List" class="com.twoways.to.ClientsTO" >
      <result property="cliAddress" column="CLI_ADDRESS" />
      <result property="cliDescription" column="CLI_DESCRIPTION"/>
      <result property="cliCountry"   column="CLI_COUNTRY" />
      <result property="cliId" column="CLI_ID"  />
      <result property="cliName" column="CLI_NAME" />
      <result property="cliPhone" column="CLI_PHONE" />
      <result property="cliPostalCode" column="CLI_POSTAL_CODE" />  
      <result property="cliMail" column="CLI_MAIL" /> 
    </resultMap>
  
 <statement  id="getClientById" resultMap="select-Client" parameterClass="java.lang.String" >
     select *       
     from clients left outer join currency on clients.currency_cur_id = currency.cur_id
     where cli_id = #value#
     and CLI_ERASE_DATE is null
 </statement>
 
  <statement  id="getClientByName" resultMap="select-Client" parameterClass="java.lang.String" >
     select *       
     from clients left outer join currency on clients.currency_cur_id = currency.cur_id
     where cli_Name = #value# 
     and CLI_ERASE_DATE is null
     and rownum = 1 
 </statement>
 
 
  <statement id="buscarClientes" resultMap="select-Client-List"  parameterClass="java.lang.String" >
     select *       
     from clients left outer join currency on clients.currency_cur_id = currency.cur_id
     where upper(clients.CLI_NAME) like '%' || upper(#value#) || '%'
     and CLI_ERASE_DATE is null
         
  </statement>

  <select  id="clients.seq" resultClass="java.lang.Long" parameterClass="java.lang.String" > select client_seq.nextval cliId from dual</select> 
         
  <select  id="order.seq" resultClass="java.lang.Long" parameterClass="java.lang.String" > select order_seq.nextval ordId from dual</select>   

  <select  id="client_responsable.seq" resultClass="java.lang.Long" parameterClass="java.lang.String" > select client_resp_seq.nextval creId from dual</select> 
 
  <insert id="insertClients" parameterClass="com.twoways.to.ClientsTO"   >
       
      insert into clients
          (cli_id, cli_name, cli_description, cli_mail, cli_address, cli_phone, cli_country, cli_postal_code,currency_cur_id)
        values
          (#cliId#, #cliName#, #cliDescription#, #cliMail#, #cliAddress#, #cliPhone#, #cliCountry#, #cliPostalCode#,#currencyTO.curId#)
         
  </insert>      
  
  <insert id="insertClientsRates" parameterClass="com.twoways.to.ClientsRatesTO"   >
    insert into clients_rates
           (clients_cli_id, clr_value, rates_rat_id)
    values
          (#clientsTO.cliId#, #clrValue#, #ratesTO.ratId#)
          
  </insert>
  
  <insert id="insertClientsResponsable" parameterClass="com.twoways.to.ClientResponsableTO"   >
    insert into client_responsable
           (cre_id, cre_First_Name, cre_Last_Name, cre_email, cre_Phone_Number, cre_Mobile_Number, clients_cli_id)
    values
          (#creId#, #creFirstName#, #creLastName#, #creEmail#, #crePhoneNumber#, #creMobileNumber#, #clientsTO.cliId#)
          
  </insert>
  
  <update  id="updateClients" parameterClass="com.twoways.to.ClientsTO">
      UPDATE clients
      SET     cli_name = #cliName# , 
              cli_description = #cliDescription#,
              cli_mail = #cliMail#,
              cli_address = #cliAddress#  ,
              cli_phone =  #cliPhone# ,
              cli_country = #cliCountry# ,
              cli_postal_code =#cliPostalCode# ,
              currency_cur_id= #currencyTO.curId#
              WHERE  cli_id = #cliId#                     
  </update>
  
  <delete id="deleteClients" parameterClass="com.twoways.to.ClientsTO">
        UPDATE Clients
        SET CLI_ERASE_DATE = sysdate
        WHERE  cli_id = #cliId#    
        
        
 </delete>
      
   <resultMap id="select-Cli-Rates" class="com.twoways.to.ClientsRatesTO" >
      <result property="clrValue" column="CLR_VALUE" />
      <result property="clientsTO.cliId" column="CLIENTS_CLI_ID"/>
      <result property="ratesTO.ratId" column="RAT_ID" />
      <result property="ratesTO.ratDescription" column="RAT_DESCRIPTION"/>
      <result property="ratesTO.ratName"   column="RAT_NAME" />
      <result property="ratesTO.rateTypesTO.rtyName" column="RAT_TYPE"  />
   </resultMap>

   <resultMap id="select-Cli-Responsable" class="com.twoways.to.ClientResponsableTO" >
      <result property="creId" column="CRE_ID" />
      <result property="creFirstName" column="CRE_FIRST_NAME" />
      <result property="creLastName" column="CRE_LAST_NAME"/>
      <result property="crePhoneNumber" column="CRE_PHONE_NUMBER" />
      <result property="creMobileNumber" column="CRE_MOBILE_NUMBER"  />
      <result property="clientsTO.cliId" column="CLIENTS_CLI_ID"/>      
   </resultMap>   
  
  <statement  id="getClientRatesByCliId" resultMap="select-Cli-Rates"  parameterClass="com.twoways.to.ClientsTO" >
     select * from clients_rates cr join rates r on cr.rates_rat_id = r.rat_id 
     and   cr.clients_cli_id=#cliId#
  </statement>     

  <statement  id="getClientResponsableByCliId" resultMap="select-Cli-Responsable"  parameterClass="com.twoways.to.ClientsTO" >
     select * from client_responsable cr 
     where   cr.clients_cli_id=#cliId#
  </statement>   
  
  <insert id="updateClientsRates" parameterClass="com.twoways.to.ClientsRatesTO"   >
    update  clients_rates
    set  clr_value= #clrValue#
    where
    clients_cli_id = #clientsTO.cliId#  and  
    rates_rat_id = #ratesTO.ratId#
          
  </insert>
   
  <delete id="deleteClientsRates" parameterClass="com.twoways.to.ClientsRatesTO"   >
    delete  clients_rates
    where
    clients_cli_id = #clientsTO.cliId#  and  
    rates_rat_id = #ratesTO.ratId#        
  </delete>  
  
  <!--Empleados-->

    <resultMap id="select-Employee" class="com.twoways.to.EmployeesTO" >
      <result property="empId" column="EMP_ID" />    
      <result property="empAddress" column="EMP_ADDRESS" />
      <result property="empAvailability" column="EMP_AVAILABILITY"/>
      <result property="empBirth"   column="EMP_BIRTH" />
      <result property="empFirstName" column="EMP_FIRST_NAME"  />
      <result property="empLastName" column="EMP_LAST_NAME" />
      <result property="empLocation" column="EMP_LOCATION" />
      <result property="empMail" column="EMP_MAIL" />  
      <result property="empMobileNumber" column="EMP_MOBILE_NUMBER" /> 
      <result property="empMsn" column="EMP_MSN" /> 
      <result property="empObservations" column="EMP_OBSERVATIONS" /> 
      <result property="empPhoneNumber" column="EMP_PHONE_NUMBER" />      
    </resultMap>
  
  <select id="obtenerEmpleados"  resultMap="select-Employee" parameterClass="java.lang.String">
     select *      
     from 
     Employees
     where emp_erase_date is null
  </select>
  
 <statement  id="getEmpById" resultMap="select-Employee" parameterClass="java.lang.String" >
     select *       
     from employees
     where emp_id = #value#
     and emp_erase_date is null
 </statement>
 
  <statement id="buscarEmpleados" resultMap="select-Employee"  parameterClass="java.lang.String" >
     select *       
     from employees 
     where upper(EMP_FIRST_NAME) like '%' || upper(#value#) || '%'
     and emp_erase_date is null

  </statement>

  <select  id="employees.seq" resultClass="java.lang.Long" parameterClass="java.lang.String" > select employee_seq.nextval empId from dual</select> 

  <insert id="insertEmployee" parameterClass="com.twoways.to.EmployeesTO"   >
       
      insert into employees
          (emp_id, emp_first_name, emp_last_name, emp_availability, emp_mail, emp_msn, emp_address, emp_phone_number, emp_mobile_number, emp_location, emp_birth,emp_observations)
        values
          (#empId#, #empFirstName#, #empLastName#, #empAvailability#, #empMail#, #empMsn#, #empAddress#, #empPhoneNumber#, #empMobileNumber#, #empLocation#, #empBirth#, #empObservations#)
         
  </insert>
  
  <insert id="insertEmployeesRates" parameterClass="com.twoways.to.EmployeesRatesTO"   >
    insert into employees_rates
           (employees_emp_id, emr_value, rates_rat_id)
    values
          (#employeesTO.empId#, #emrValue#, #ratesTO.ratId#)
          
  </insert>
  
  <insert id="updateEmployeesRates" parameterClass="com.twoways.to.EmployeesRatesTO"   >
    update  employees_rates
    set  emr_value= #emrValue#
    where
    employees_emp_id = #employeesTO.empId#  and  
    rates_rat_id = #ratesTO.ratId#          
  </insert>
  
  <delete id="deleteEmployeesRates" parameterClass="com.twoways.to.EmployeesRatesTO"   >
    delete  employees_rates
    where
    employees_emp_id = #employeesTO.empId#  and  
    rates_rat_id = #ratesTO.ratId#          
  </delete>
  
  <insert id="insertEmployeesTypes" parameterClass="com.twoways.to.EmployeesTypesTO"   >
    insert into employees_types
           (EMPLOYEES_EMP_ID,  EMPLOYEE_TYPE_ETY_NAME)
    values
          (#employeesTO.empId#, #employeeTypeTO.etyName#)          
  </insert>
  
  <insert id="updateEmployeesTypes" parameterClass="com.twoways.to.EmployeesTypesTO"   >
    update  employees_types
    set  EMPLOYEE_TYPE_ETY_NAME = #etyName#
    where
    employees_emp_id = #employeesTO.empId#          
  </insert>  
  
  <delete id="deleteEmployeesTypes" parameterClass="com.twoways.to.EmployeesTypesTO"   >
    delete  employees_types
    where
    employees_emp_id = #employeesTO.empId# 
  </delete>  
  
  <update  id="updateEmployees" parameterClass="com.twoways.to.EmployeesTO">
      UPDATE employees
      SET     emp_first_name = #empFirstName# , 
              emp_last_name = #empLastName# , 
              emp_availability = #empAvailability#,
              emp_mail = #empMail#,
              emp_msn = #empMsn#  ,
              emp_address =  #empAddress# ,
              emp_phone_number = #empPhoneNumber# ,
              emp_mobile_number =#empMobileNumber# ,
              emp_location= #empLocation#,
              emp_birth = #empBirth#,
              emp_observations = #empObservations#
              WHERE  emp_id = #empId#                     
  </update>
  
  <delete id="deleteEmployee" parameterClass="com.twoways.to.EmployeesTO">
        UPDATE Employees
        SET emp_erase_date = sysdate
        WHERE  emp_id = #empId#    
 </delete>     
 
  <resultMap id="select-Tipo-Emp" class="com.twoways.to.EmployeeTypeTO" >
       
      <result property="etyName" column="ety_name" />
      <result property="etyDescription" column="ety_description" />
  </resultMap>      
  
  <statement  id="obtenerTipoEmpleado" resultMap="select-Tipo-Emp">
     select *    
     from 
     employee_type
  </statement>   
     
  <statement  id="obtenerTipoEmpleadoByEmpId" resultMap="select-Tipo-Emp" parameterClass="java.lang.String">
     select *    
     from employee_type
     where ety_name not in (select employee_type_ety_name 
                            from employees_types
                            where employees_emp_id = #empId#)
  </statement>
  
  <resultMap id="select-Emp-Rates" class="com.twoways.to.EmployeesRatesTO" >
      <result property="emrValue" column="EMR_VALUE" />
      <result property="employeesTO.empId" column="EMPLOYEES_EMP_ID"/>
      <result property="ratesTO.ratId" column="RAT_ID" />
      <result property="ratesTO.ratDescription" column="RAT_DESCRIPTION"/>
      <result property="ratesTO.ratName"   column="RAT_NAME" />
      <result property="ratesTO.rateTypesTO.rtyName" column="RAT_TYPE"  />
  </resultMap>
  
  <statement  id="getEmpRatesByEmpId" resultMap="select-Emp-Rates"  parameterClass="com.twoways.to.EmployeesTO" >
     select * from employees_rates cr 
     join rates r 
     on cr.rates_rat_id = r.rat_id 
     and   cr.employees_emp_id=#empId#
  </statement>       

  <resultMap id="select-Emp-Types" class="com.twoways.to.EmployeesTypesTO">
      <result property="employeesTO.empId" column="EMPLOYEES_EMP_ID"/>
      <result property="employeeTypeTO.etyName" column="EMPLOYEE_TYPE_ETY_NAME" />     
  </resultMap>
  
  <statement  id="getEmpTypesByEmpId" resultMap="select-Emp-Types"  parameterClass="com.twoways.to.EmployeesTO" >
     select * from employees_types cr 
     where cr.employees_emp_id=#empId#
  </statement>  
  
  <!--Monedas -->
 
  <resultMap id="select-Currency" class="com.twoways.to.CurrencyTO" >
       
      <result property="curId" column="cur_id" />
      <result property="curName" column="cur_Name" />
  </resultMap> 
   
  <statement  id="getCurrencyId" resultMap="select-Currency"  parameterClass="java.lang.Integer" >
     select *    
     from 
     Currency
     where cur_id = #value#
  </statement>   
 
  <statement id="obtenerMonedas"  parameterClass="java.lang.String" resultMap="select-Currency" >
     select *    
     from 
     Currency
     
  </statement>

<!--Tarifas-->
  
  <resultMap id="select-Rate-List" class="com.twoways.to.RatesTO" >
      <result property="ratId" column="RAT_ID" />
      <result property="ratDescription" column="RAT_DESCRIPTION"/>
      <result property="ratName"   column="RAT_NAME" />
      <result property="rateTypesTO.rtyName" column="RAT_TYPE"  />
      <result property="currencyTO.curName" column="cur_Name" />    
      <result property="currencyTO.curId" column="cur_Id" />
  </resultMap>
  
  <select id="obtenerTarifas"  parameterClass="java.lang.String" resultClass="com.twoways.to.RatesTO">
     select 
        RAT_ID as ratId,
        RAT_NAME as ratName,
        RAT_TYPE as ratType,
        RAT_DESCRIPTION as ratDescription,
        CUR_NAME as curName
     from 
     Rates r, Currency c
     where r.currency_cur_id = c.cur_id
     
  </select>
  
  <select  id="rates.seq" resultClass="java.lang.Long" parameterClass="java.lang.String" > 
     select rates_seq.nextval ratId from dual
  </select> 

  <insert id="insertRate" parameterClass="com.twoways.to.RatesTO" >
      insert into rates
          (rat_id, rat_type, rat_name, rat_description,currency_cur_id)
        values
          (#ratId#, #rateTypesTO.rtyName#, #ratName#, #ratDescription#, #currencyTO.curId#)                        
  </insert>

  <update  id="updateRate" parameterClass="com.twoways.to.RatesTO">
      UPDATE rates
      SET     rat_name = #ratName# , 
              rat_description = #ratDescription#,
              rat_type = #rateTypesTO.rtyName#,
              currency_cur_id= #currencyTO.curId#
              WHERE  rat_id = #ratId#                     
  </update>  
  
  <select id="obtenerTipoTarifas"  parameterClass="java.lang.String" resultClass="com.twoways.to.RateTypesTO">
     select 
        RTY_NAME as rtyName,
        RTY_DESCRIPTION as rtyDescription
     from 
     Rate_Types
     
  </select>
    
 <select  id="getRatesByType" parameterClass="com.twoways.to.RateTypesTO" resultMap="select-Rate-List">
     select *
     from Rates r left outer  join Currency c on r.currency_cur_id = c.cur_id
     where rat_type = #rtyName#
 </select>   
    
 <select  id="getRateById" parameterClass="java.lang.String" resultMap="select-Rate-List">
     select *
     from Rates r left outer  join Currency c on r.currency_cur_id = c.cur_id
     where rat_id = #value#
 </select>

  <delete id="deleteRates" parameterClass="com.twoways.to.RatesTO">
        DELETE Rates
        WHERE  rat_id = #ratId#    
 </delete> 

  <statement id="buscarTarifas" resultMap="select-Rate-List"  parameterClass="java.lang.String" >
     select *       
     from rates, currency 
     where rates.currency_cur_id = currency.cur_id
     and upper(rates.RAT_NAME) like '%' || upper( #value#) || '%'
     order by rates.RAT_NAME
     
  </statement>

<!--Usuarios-->
  <resultMap id="select-User" class="com.twoways.to.UsersTO" >
      <result property="usrFirstName" column="USR_FIRST_NAME" />
      <result property="usrLastName" column="USR_LAST_NAME"/>
      <result property="usrId"   column="USR_ID" />
      <result property="usrMail" column="USR_MAIL"  />
      <result property="usrBirth" column="USR_BIRTH" />
      <result property="usrMobileNumber" column="USR_MOBILE_NUMBER" />
      <result property="usrOfficeNumber" column="USR_OFFICE_NUMBER" />  
      <result property="usrPhoneNumber" column="USR_PHONE_NUMBER" />
      <result property="rolesTO.rolId" column="rol_id" />
      <result property="rolesTO.rolName" column="rol_Name" />
  </resultMap>
  
  <resultMap id="select-User-busq"  class="com.twoways.to.UsersTO" >
      <result property="usrFirstName" column="USR_FIRST_NAME" />
      <result property="usrLastName" column="USR_LAST_NAME"/>
      <result property="usrId"   column="USR_ID" />
      <result property="usrMail" column="USR_MAIL"  />
      <result property="usrBirth" column="USR_BIRTH" />
  </resultMap>

  <select id="obtenerUsuarios"  resultMap="select-User" parameterClass="java.lang.String">
     select * 
       from Users , Roles
      where roles_rol_id=rol_id
     
  </select>  
  
  <statement  id="getUserById" resultMap="select-User" parameterClass="java.lang.String" >
     select *
       from users, Roles 
      where usr_id = #value#
        and roles_rol_id=rol_id
  </statement>
 
  <statement id="buscarUsuarios" resultMap="select-User-busq"  parameterClass="java.lang.String" >
     select *       
     from users
     where upper(USR_FIRST_NAME) like '%' || upper( #value#) || '%'
     
  </statement>

  <statement id="buscarUsuariosId" resultMap="select-User-busq"  parameterClass="java.lang.String" >
     select *       
     from users
     where upper(USR_ID) like '%' || upper( #value#) || '%'
     
  </statement>
  
  <insert id="insertUser" parameterClass="com.twoways.to.UsersTO" >
      insert into users
          (USR_ID, USR_PASS, USR_FIRST_NAME, USR_LAST_NAME, USR_MAIL, USR_BIRTH, USR_MOBILE_NUMBER, USR_OFFICE_NUMBER, USR_PHONE_NUMBER,roles_rol_id)
        values
          (#usrId#, #usrPass#, #usrFirstName#, #usrLastName#, #usrMail#, #usrBirth#, #usrMobileNumber#, #usrOfficeNumber#, #usrPhoneNumber#,#rolesTO.rolId#)
                            
  </insert>
  
   <update  id="updateUsers" parameterClass="com.twoways.to.UsersTO">
      UPDATE users
      SET     USR_FIRST_NAME = #usrFirstName# , 
              USR_LAST_NAME = #usrLastName#,
              USR_MAIL = #usrMail#,
              USR_BIRTH = #usrBirth#  ,
              USR_MOBILE_NUMBER =  #usrMobileNumber# ,
              USR_OFFICE_NUMBER = #usrOfficeNumber# ,
              USR_PHONE_NUMBER =#usrPhoneNumber# ,
              roles_rol_id= #rolesTO.rolId#
              WHERE  usr_id = #usrId#                     
  </update>
  
  <delete id="deleteUsers" parameterClass="com.twoways.to.UsersTO">
        DELETE Users
        WHERE  usr_id = #usrId#    
 </delete>

 <statement id="obtenerRoles"  resultClass="com.twoways.to.RolesTO" parameterClass="java.lang.String">
     select  rol_id as rolId,
             rol_Name as rolName, 
             rol_description as rolDescription 
     from Roles     
  </statement>  
  
  <!-- Items -->
  <select  id="items.seq" resultClass="java.lang.Long" parameterClass="java.lang.String" > select item_seq.nextval itmId from dual</select> 
  

  <insert id="insertItem" parameterClass="com.twoways.to.ItemsTO" >
      insert into items
          (itm_id, itm_type, itm_name, itm_description)
        values
          (#itmId#, #itmType#, #itmName#, #itmDescription#)                        
  </insert>

  <update  id="updateItem" parameterClass="com.twoways.to.ItemsTO">
      UPDATE items
      SET     itm_name = #itmName# , 
              itm_description = #itmDescription#,
              itm_type = #itmType#
      WHERE  itm_id = #itmId#                     
  </update>  
  
  <resultMap id="select-Item-List"  class="com.twoways.to.ItemsTO" >
      <result property="itmName" column="ITM_NAME" />
      <result property="itmId"   column="ITM_ID" />
      <result property="itmType" column="ITM_TYPE"  />
      <result property="itmDescription" column="ITM_DESCRIPTION" />
  </resultMap>
    
  <statement id="buscarItems" resultMap="select-Item-List"  parameterClass="java.lang.String" >
     select *       
     from items
     where upper(items.ITM_NAME) like '%' || upper( #value#) || '%'
     order by items.ITM_NAME
     
  </statement>

  <delete id="deleteItem" parameterClass="com.twoways.to.ItemsTO">
        DELETE Items
        WHERE  itm_id = #itmId#    
 </delete> 
  
   <select  id="getItemById" parameterClass="java.lang.String" resultMap="select-Item-List">
     select *
     from Items r 
     where itm_id = #value#
 </select>
  
  <!-- Translator -->
  <select  id="traductores.seq" resultClass="java.lang.Long" parameterClass="java.lang.String" > select translator_seq.nextval traId from dual</select> 

 <insert id="insertarTraductor" parameterClass="com.twoways.to.TranslatorsTO" >
      insert into translators
          (tra_id, employees_emp_id)
        values
          (#traId#, #employeesTO.empId#)                        
  </insert>
  
 <select  id="trans_lang.seq" resultClass="java.lang.Long" parameterClass="java.lang.String" > select trans_lang_seq.nextval tlaId from dual</select> 
   
  <insert id="insertTransLanguagues" parameterClass="com.twoways.to.TranslatorsLanguaguesTO">
        insert into translators_languagues
            (tla_id, translators_tra_id, languagues_acronyms_languagues,languagues_acronyms_laa_acrony, languagues_acronyms_languague1,languagues_acronyms_laa_acron1)
          values
            (#tlaId#, #translatorsTraId#,#langAcronymsTO.languaguesTO.lanId#,#langAcronymsTO.laaAcronym#,#langAcronymsTO1.languaguesTO.lanId#,#langAcronymsTO1.laaAcronym#)
  </insert>

  <insert id="insertTransSpecializations" parameterClass="com.twoways.to.TranslatorsSpecializationsTO">
        insert into translators_specializations
            (translators_tra_id, specializations_spe_name)
          values
            (#translatorsTO.traId#,#specializationsTO.speName#)
  </insert>
  
  <resultMap id="select-Trans-Lang" class="com.twoways.to.TranslatorsLanguaguesTO">
      <!--<result property="translatorsTO.traId" column="translators_tra_id" />  -->
      <result property="langAcronymsTO.languaguesTO.lanName"   column="languagues_acronyms_languagues" />
      <result property="langAcronymsTO.laaAcronym"   column="languagues_acronyms_laa_acrony" />
      <result property="langAcronymsTO1.languaguesTO.lanId" column="languagues_acronyms_languague1"  />
      <result property="langAcronymsTO1.laaAcronym"   column="languagues_acronyms_laa_acron1" />    
      <result property="tlaId" column="tla_id"/>
  </resultMap>
  
    <resultMap id="select-Trans-Spezial" class="com.twoways.to.TranslatorsSpecializationsTO">
      <result property="translatorsTO.traId" column="translators_tra_id" />  
      <result property="specializationsTO.speName"  column="specializations_Spe_Name" />
  </resultMap>
  
  <statement  id="getTransLangByTransId" resultClass="java.util.HashMap"  parameterClass="java.lang.Long" >
     select t.languagues_acronyms_languagues as lan_id_origen,
            (select l.lan_name from languagues l where l.lan_id=t.languagues_acronyms_languagues) as lan_origen,
            t.languagues_acronyms_laa_acrony as acron_origen,
            languagues_acronyms_languague1 as lan_id_destino,
            (select l.lan_name from languagues l where l.lan_id=t.languagues_acronyms_languague1) as lan_destino,
            t.languagues_acronyms_laa_acron1 as acron_destino
     from translators_languagues t 
     where t.translators_tra_id =  #traId#
  </statement>  
    
  <statement  id="getTransSpezialByTransId" resultMap="select-Trans-Spezial"  parameterClass="java.lang.String" >
     select *
     from translators_specializations t
     where t.translators_tra_id = #traId#
  </statement>  
  
  <resultMap id="select-TradId-List"  class="com.twoways.to.TranslatorsTO" >
      <result property="traId" column="tra_id" />   
      <result property="employeesTO.empId" column="employees_emp_id" />   
  </resultMap>
 
  
 
 <delete id="deleteTranslatorsLangs" parameterClass="com.twoways.to.TranslatorsLanguaguesTO">
        DELETE translators_languagues
        WHERE  translators_tra_id = #translatorsTraId#    
 </delete> 
 
  <delete id="deleteTranslatorsSpezials" parameterClass="com.twoways.to.TranslatorsSpecializationsTO">
        DELETE translators_languagues
        WHERE  translators_tra_id = #translatorsTraId#    
 </delete> 
 
   <select  id="getTraByEmpId" parameterClass="java.lang.String" resultMap="select-TradId-List">
     select *
     from translators t, translators_specializations ts, translators_languagues l
     where employees_emp_id = #value#
     and t.tra_id=ts.translators_tra_id
     and t.tra_id=l.translators_tra_id
 </select>
 
 <select  id="getTraById" parameterClass="java.lang.String" resultMap="select-TradId-List">
     select *
     from translators t
     where t.tra_id = #value#
 </select> 
 
  <statement id="obtenerIdioma"  resultClass="com.twoways.to.LanguaguesTO" parameterClass="java.lang.String">
     select  lan_id as lanId,
             lan_Name as lanName, 
             lan_description as lanDescription 
     from Languagues     
  </statement>  
  
   <resultMap id="select-Acron-List"  class="com.twoways.to.LanguaguesAcronymsTO" >
      <result property="laaAcronym" column="laa_acronym" />  
      <result property="laaDescription" column="laa_description" />
      <result property="languaguesTO.lanId"   column="languagues_lan_id" />
  </resultMap>
  
  <statement id="obtenerAcronimos"  resultMap="select-Acron-List" parameterClass="java.lang.String">
     select  *
     from Languagues_acronyms     










































  </statement>  

<!--hasta aca lo nuevo-->


  
    
 
  
  <!--statement id="buscarTraductores" resultMap="select-Trad-List"  parameterClass="java.lang.String" >
     select *       
     from translators t, employees e
     where t.employees_emp_id = e.emp_id
     and upper(e.emp_last_name) like '%' || upper( #value#) || '%'
     order by e.emp_last_name
     
  </statement-->

  <delete id="deleteTraductor" parameterClass="com.twoways.to.TranslatorsTO">
        DELETE translators
        WHERE  tra_id = #traId#    
 </delete> 
  <!--Ver-->
  <statement id="getPass"  resultClass="java.lang.String" parameterClass="java.lang.String">
     select  usr_pass
     from  users 
     where upper(usr_id) = upper(#value#)      
  </statement>  

 <select id="obtenerServices"  parameterClass="java.lang.String" resultClass="com.twoways.to.ServicesTO">
     select ser_id as serId , ser_name as serName , ser_description  as serDescription from services
     
  </select>  
  
  
  <select  id="orders.seq" resultClass="java.lang.Long" parameterClass="java.lang.String" > 
     select order_seq.nextval ordId from dual
  </select> 
  
    <select  id="ordersdoc.seq" resultClass="java.lang.Long" parameterClass="java.lang.String" > 
     select order_doc_seq.nextval ordDocId from dual
  </select> 
    
  <insert id="insertOrders" parameterClass="com.twoways.to.OrdersTO" >
       
  insert into orders
       (ord_id, ord_name, ord_description, ord_date, ord_start_date,ord_finish_date, clients_cli_id, ord_proj_id, ord_wo_number, ord_job_id, ord_job_name, ord_job_description)
     values
       (#ordId#, #ordName#, #ordDescription#, #ordDate#, #ordFinishDate#,  #clientsTO.cliId#, #ordProjId#, #ordWoNumber#, #ordJobId#, #ordJobName#, #ordJobDescription#)
       
   
  </insert>
  
      
  <insert id="insertOrderDoc" parameterClass="com.twoways.to.OrdersDocsTO" >
    insert into orders_docs
      (odo_id, odo_name, orders_ord_id, odo_doc)
     values
      (#odoId#, #odoName#, #ordersOrdId#,  #odoDoc#)
  </insert>
  
  
  <insert id="insertOrdersRates" parameterClass="com.twoways.to.OrdersRatesTO" >
    insert into orders_rates
           (orders_ord_id, orr_value, rates_rat_id)
            values
           (#ordersTO.ordId#,#clrValue# ,#ratesTO.ratId#)
      
  </insert>

   <resultMap id="select-Order" class="com.twoways.to.OrdersTO" >
      <result property="ordId" column="ord_id" />
      <result property="ordName" column="ord_name"/>
      <result property="ordDate"   column="ord_date" />
      <result property="ordFinishDate"   column="ord_finish_date" />
      <result property="ordDescription"   column="ord_description" />
      <result property="clientsTO.cliId" column="clients_cli_id"  />
      <result property="ordProjId" column="ord_proj_id" />
      <result property="ordWoNumber" column="ord_wo_number" />
      <result property="ordJobId" column="ord_job_id" />  
      <result property="ordJobName" column="ord_job_name" />
      <result property="ordJobDescription" column="ord_job_description" />
      <result property="clientsTO.cliName" column="cli_name" />
  </resultMap>
  
  
   
   <resultMap id="select-order-doc" class="com.twoways.to.OrdersDocsTO" >
      <result property="odoId" column="odo_id" />
      <result property="odoName" column="odo_name"/>
      <result property="ordersOrdId"   column="orders_Ord_Id" />
      <result property="odoDoc" column="odo_doc"  jdbcType="BLOB" />
  </resultMap>
  

   <statement id="getOrderById" parameterClass="java.lang.Long" resultMap="select-Order" >
       
       select *
       from orders, clients
       where ord_id = #value#
       and clients_cli_id = cli_Id 
  </statement>
  
  <statement id="getOrderDocById" parameterClass="java.lang.Long" resultMap="select-order-doc" >
    select * from  orders_docs
    where odo_id = #odoId#
  </statement>
  
  <statement id="getOrderDocByOrder" parameterClass="java.lang.Long" resultMap="select-order-doc" >
    select * from  orders_docs
    where orders_Ord_Id = #ordersOrdId#
  </statement>
  
     <resultMap id="select-Ord-Rates" class="com.twoways.to.OrdersRatesTO" >
      <result property="clrValue" column="orr_value" />
      <result property="ordersTO.ordId" column="orders_ord_id"/>
      <result property="ratesTO.ratId" column="RAT_ID" />
      <result property="ratesTO.ratDescription" column="RAT_DESCRIPTION"/>
      <result property="ratesTO.ratName"   column="RAT_NAME" />
      <result property="ratesTO.rateTypesTO.rtyName" column="RAT_TYPE"  />
   </resultMap>
  
  <statement  id="getOrderRatesByOrderId" resultMap="select-Ord-Rates"  parameterClass="com.twoways.to.OrdersTO" >
     select * from orders_rates ord join rates r on ord.rates_rat_id = r.rat_id and ord.orders_ord_id=#ordId#
  </statement>    
  
  <insert id="insertOrdersServices" parameterClass="java.util.Map" >
    insert into order_services
           (services_ser_name, orders_ord_id)
           values
           (#serId#,#ordId#)
      
  </insert>
  
    <statement  id="getOrderServicesByOrderId" resultClass="com.twoways.to.ServicesTO"   parameterClass="com.twoways.to.OrdersTO"  >
     select s.ser_id as serId,
            s.ser_name as  serName,
            s.ser_Description as serDescription
            from order_services ord join Services s on ord.services_ser_name = s.ser_id and ord.orders_ord_id=#ordId#
  </statement> 
    
  <update id="updateOrders" parameterClass="com.twoways.to.OrdersTO" >
         update orders
               set ord_name = #ordName#,
                   ord_description = #ordDescription#,
                   ord_date = #ordDate#,
                   clients_cli_id = #clientsTO.cliId#,
                   ord_proj_id = #ordProjId#,
                   ord_wo_number = #ordWoNumber#,
                   ord_job_id = #ordJobId#,
                   ord_job_name = #ordJobName#,
                   ord_job_description = #ordJobDescription#,
                   ord_finish_date = #ordFinishDate#
                   
             where ord_id =#ordId#
  </update>
  

 
   <update id="updateOrdersRates" parameterClass="com.twoways.to.OrdersRatesTO" >
          update  orders_rates
                  set  orr_value= #clrValue#
                  where
                  orders_ord_id = #ordersTO.ordId#  and  
                  rates_rat_id = #ratesTO.ratId#
  </update>
  
  
   
  <delete id="deleteOrdersRates" parameterClass="com.twoways.to.OrdersRatesTO"   >
    delete  orders_rates
    where
    orders_ord_id = #ordersTO.ordId#  and  
    rates_rat_id = #ratesTO.ratId#        
  </delete>  
  
  
   <delete id="deleteOrdersServices" parameterClass="java.util.Map"   >
    delete order_services
       where services_ser_name = #serId#
       and orders_ord_id = #ordId#    
  </delete>  
  
  
   <delete id="deleteOrdersDocs" parameterClass="java.util.Map"   >
    delete orders_docs
          where odo_id =#odoId#
          and orders_ord_id = #ordId#
  </delete>  
  
    <!-- Cuentas -->
  <select id="accounts.seq" resultClass="java.lang.Long" parameterClass="java.lang.String" > select account_seq.nextval accId from dual</select>   

  <insert id="insertAccount" parameterClass="com.twoways.to.AccountsTO" >
      insert into accounts
          (acc_id, acc_name, acc_number, acc_description, acc_details)
        values
          (#accId#, #accName#, #accNumber#, #accDescription#, #accDetails#)                        
  </insert>

  <update  id="updateAccount" parameterClass="com.twoways.to.AccountsTO">
      UPDATE accounts
         SET acc_name = #accName#, 
             acc_number = #accNumber#,
             acc_description = #accDescription#,
             acc_details = #accDetails#
      WHERE  acc_id = #accId#                     
  </update>  
  
  <resultMap id="select-Account-List"  class="com.twoways.to.AccountsTO" >
      <result property="accName" column="ACC_NAME" />
      <result property="accId"   column="ACC_ID" />
      <result property="accNumber" column="ACC_NUMBER"  />
      <result property="accDescription" column="ACC_DESCRIPTION" />
      <result property="accDetails" column="ACC_DETAILS" />      
  </resultMap>
    
  <statement id="buscarAccounts" resultMap="select-Account-List"  parameterClass="java.lang.String" >
     select *       
     from accounts
     where upper(ACC_NAME) like '%' || upper( #value#) || '%'
     order by ACC_NAME
     
  </statement>

  <delete id="deleteAccount" parameterClass="com.twoways.to.AccountsTO">
        DELETE Accounts
        WHERE  acc_id = #accId#    
 </delete> 
  
   <select id="getAccountById" parameterClass="java.lang.String" resultMap="select-Account-List">
     select *
     from Accounts 
     where acc_id = #value#
 </select>

 <statement id="obtenerEspecializaciones"  resultClass="com.twoways.to.SpecializationsTO" parameterClass="java.lang.String">
     select  spe_Name as speName, 
             spe_description as speDescription 
     from Specializations     
  </statement>  


  <!--proyectos -->
  
  <select id="project.seq" resultClass="java.lang.Long" parameterClass="java.lang.String" > select project_seq.nextval accId from dual</select>   
  
 
   <resultMap id="select-project-obj"  class="com.twoways.to.ProjectsTO" >
      <result property="proId" column="pro_id" />
      <result property="proName"   column="pro_name" />
      <result property="proDescription" column="pro_description"  />
      <result property="proStatus" column="pro_status" />
      <result property="proTotalCliWcount" column="pro_total_cli_wcount" />     
      <result property="proTotalClient" column="pro_total_client" />     
      <result property="proTotalTranWcount" column="pro_total_tran_wcount" />     
      <result property="proTotalTranslator" column="pro_total_translator" />     
      <result property="proStartDate" column="pro_start_date" />     
      <result property="proFinishDate" column="pro_finish_date" />     
      <result property="currencyCotizationsCucId" column="currency_cotizations_cuc_id" /> 
      <result property="usersUsrId" column="users_usr_id" />     
      <result property="currencyTO.curId" column="currency_cur_id" />     
      <result property="ordersTO.ordId"  column="orders_ord_id"/> 
      <result property="proDate" column="pro_date" /> 
      
  </resultMap>
  
  
  <select id="getProjectById" parameterClass="java.lang.Long" resultMap="select-project-obj">
     select *
     from projects 
     where pro_id = #value#
 </select>
 
 <select id="getProjectByOrdId" parameterClass="java.lang.Long" resultMap="select-project-obj">
     select *
     from projects 
     where orders_ord_id = #value#
 </select>
  
   <insert id="insertProject" parameterClass="com.twoways.to.ProjectsTO"   >
       
      insert into projects
          (pro_id, pro_name, pro_description, pro_status, pro_total_cli_wcount, pro_total_client, pro_total_tran_wcount, pro_total_translator, pro_start_date, pro_finish_date, currency_cotizations_cuc_id, users_usr_id, currency_cur_id, orders_ord_id, pro_date)
        values
          (#proId#, #proName#, #proDescription#, #proStatus#,#proTotalCliWcount#,#proTotalClient#,#proTotalTranWcount#,#proTotalTranslator#,#proStartDate#,#proFinishDate#,#currencyCotizationsCucId#,#usersUsrId#,#currencyTO.curId#,#ordersTO.ordId#,#proDate#)  
  </insert>      
    <insert id="updateProject" parameterClass="com.twoways.to.ProjectsTO"   >
       update projects
    set pro_id = #proId#,
        pro_name =#proName#,
        pro_description =#proDescription#,
        pro_status =#proStatus#,
        pro_total_cli_wcount =#proTotalCliWcount#,
        pro_total_client =#proTotalClient#,
        pro_total_tran_wcount =#proTotalTranWcount#,
        pro_total_translator =#proTotalTranslator#,
        pro_start_date =#proStartDate#,
        pro_finish_date =#proFinishDate#,
        currency_cotizations_cuc_id =#currencyCotizationsCucId#,n
        users_usr_id =#usersUsrId#,
        currency_cur_id =#currencyTO.curId#,
        orders_ord_id =#ordersTO.ordId#,
        pro_date =#proDate#
  where pro_id =#proId#
     
  </insert>      
  
  
</sqlMap> 
