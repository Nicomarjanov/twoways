<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE sqlMap PUBLIC "-//iBATIS.com//DTD SQL Map 2.0//EN" "http://www.ibatis.com/dtd/sql-map-2.dtd">

<!-- Place filename in namespace field value without extension (.xml) -->
<sqlMap namespace="twowaysMap">
  <!--- Clientes -->
  <select id="obtenerClientes"  parameterClass="java.lang.String" resultClass="com.twoways.to.ClientsTO">
     select 
        CLI_ADDRESS as cliAddress,
        CLI_COUNTRY as cliCountry,
        CLI_DESCRIPTION as cliDescription,
        CLI_ID as  cliId,
        CLI_MAIL as cliMail,
        CLI_NAME as cliName,
        CLI_PHONE as cliPhone,
        CLI_POSTAL_CODE as cliPostalCode          
     from 
     Clients 
     
  </select>  
  
  <resultMap id="select-Client" class="com.twoways.to.ClientsTO" >
      <result property="cliAddress" column="CLI_ADDRESS" />
      <result property="cliDescription" column="CLI_DESCRIPTION"/>
      <result property="cliCountry"   column="CLI_COUNTRY" />
      <result property="cliId" column="CLI_ID"  />
      <result property="cliName" column="CLI_NAME" />
      <result property="cliPhone" column="CLI_PHONE" />
      <result property="cliPostalCode" column="CLI_POSTAL_CODE" />
      <result property="cliMail" column="CLI_MAIL" />
      <result property="currencyTO.curId" column="cur_id" />
      <result property="currencyTO.curName" column="cur_Name" />
    </resultMap>
    
    <resultMap id="select-Client-List" class="com.twoways.to.ClientsTO" >
      <result property="cliAddress" column="CLI_ADDRESS" />
      <result property="cliDescription" column="CLI_DESCRIPTION"/>
      <result property="cliCountry"   column="CLI_COUNTRY" />
      <result property="cliId" column="CLI_ID"  />
      <result property="cliName" column="CLI_NAME" />
      <result property="cliPhone" column="CLI_PHONE" />
      <result property="cliPostalCode" column="CLI_POSTAL_CODE" />  
      <result property="cliMail" column="CLI_MAIL" /> 
    </resultMap>
  
 <statement  id="getClientById" resultMap="select-Client" parameterClass="java.lang.String" >
     select *       
     from clients left outer join currency on clients.currency_cur_id = currency.cur_id
     where cli_id = #value#
 </statement>
 
  <statement  id="getClientByName" resultMap="select-Client" parameterClass="java.lang.String" >
     select *       
     from clients left outer join currency on clients.currency_cur_id = currency.cur_id
     where cli_Name = #value# and rownum = 1 
 </statement>
 
 
  <statement id="buscarClientes" resultMap="select-Client-List"  parameterClass="java.lang.String" >
     select *       
     from clients left outer join currency on clients.currency_cur_id = currency.cur_id
     where upper(clients.CLI_NAME) like '%' || upper(#value#) || '%'
     
     
  </statement>

  <select  id="clients.seq" resultClass="java.lang.Long" parameterClass="java.lang.String" > select client_seq.nextval cliId from dual</select> 
        
 
  <insert id="insertClients" parameterClass="com.twoways.to.ClientsTO"   >
       
      insert into clients
          (cli_id, cli_name, cli_description, cli_mail, cli_address, cli_phone, cli_country, cli_postal_code,currency_cur_id)
        values
          (#cliId#, #cliName#, #cliDescription#, #cliMail#, #cliAddress#, #cliPhone#, #cliCountry#, #cliPostalCode#,#currencyTO.curId#)
         
  </insert>
  
  
  <insert id="insertClientsRates" parameterClass="com.twoways.to.ClientsRatesTO"   >
    insert into clients_rates
           (clients_cli_id, clr_value, rates_rat_id)
    values
          (#clientsTO.cliId#, #clrValue#, #ratesTO.ratId#)
          
  </insert>
  
  <update  id="updateClients" parameterClass="com.twoways.to.ClientsTO">
      UPDATE clients
      SET     cli_name = #cliName# , 
              cli_description = #cliDescription#,
              cli_mail = #cliMail#,
              cli_address = #cliAddress#  ,
              cli_phone =  #cliPhone# ,
              cli_country = #cliCountry# ,
              cli_postal_code =#cliPostalCode# ,
              currency_cur_id= #currencyTO.curId#
              WHERE  cli_id = #cliId#                     
  </update>
  
  <delete id="deleteClients" parameterClass="com.twoways.to.ClientsTO">
        DELETE Clients
        WHERE  cli_id = #cliId#    
        
        
 </delete>
      
   <resultMap id="select-Cli-Rates" class="com.twoways.to.ClientsRatesTO" >
      <result property="clrValue" column="CLR_VALUE" />
      <result property="clientsTO.cliId" column="CLIENTS_CLI_ID"/>
      <result property="ratesTO.ratId" column="RAT_ID" />
      <result property="ratesTO.ratDescription" column="RAT_DESCRIPTION"/>
      <result property="ratesTO.ratName"   column="RAT_NAME" />
      <result property="ratesTO.rateTypesTO.rtyName" column="RAT_TYPE"  />
   </resultMap>
  
  <statement  id="getClientRatesByCliId" resultMap="select-Cli-Rates"  parameterClass="com.twoways.to.ClientsTO" >
     select * from clients_rates cr join rates r on cr.rates_rat_id = r.rat_id 
     and   cr.clients_cli_id=#cliId#
  </statement>     
     
  <insert id="updateClientsRates" parameterClass="com.twoways.to.ClientsRatesTO"   >
    update  clients_rates
    set  clr_value= #clrValue#
    where
    clients_cli_id = #clientsTO.cliId#  and  
    rates_rat_id = #ratesTO.ratId#
          
  </insert>
   
  <delete id="deleteClientsRates" parameterClass="com.twoways.to.ClientsRatesTO"   >
    delete  clients_rates
    where
    clients_cli_id = #clientsTO.cliId#  and  
    rates_rat_id = #ratesTO.ratId#        
  </delete>  
  
  <!--Empleados-->

    <resultMap id="select-Employee" class="com.twoways.to.EmployeesTO" >
      <result property="empId" column="EMP_ID" />    
      <result property="empAddress" column="EMP_ADDRESS" />
      <result property="empAvailability" column="EMP_AVAILABILITY"/>
      <result property="empBirth"   column="EMP_BIRTH" />
      <result property="empFirstName" column="EMP_FIRST_NAME"  />
      <result property="empLastName" column="EMP_LAST_NAME" />
      <result property="empLocation" column="EMP_LOCATION" />
      <result property="empMail" column="EMP_MAIL" />  
      <result property="empMobileNumber" column="EMP_MOBILE_NUMBER" /> 
      <result property="empMsn" column="EMP_MSN" /> 
      <result property="empObservations" column="EMP_OBSERVATIONS" /> 
      <result property="empPhoneNumber" column="EMP_PHONE_NUMBER" />      
    </resultMap>
  
  <select id="obtenerEmpleados"  resultMap="select-Employee" parameterClass="java.lang.String">
     select *      
     from 
     Employees
     
  </select>
  
 <statement  id="getEmpById" resultMap="select-Employee" parameterClass="java.lang.String" >
     select *       
     from employees
     where emp_id = #value#
 </statement>
 
  <statement id="buscarEmpleados" resultMap="select-Employee"  parameterClass="java.lang.String" >
     select *       
     from employees 
     where upper(EMP_FIRST_NAME) like '%' || upper(#value#) || '%'

  </statement>

  <select  id="employees.seq" resultClass="java.lang.Long" parameterClass="java.lang.String" > select employee_seq.nextval empId from dual</select> 

  <insert id="insertEmployee" parameterClass="com.twoways.to.EmployeesTO"   >
       
      insert into employees
          (emp_id, emp_first_name, emp_last_name, emp_availability, emp_mail, emp_msn, emp_address, emp_phone_number, emp_mobile_number, emp_location, emp_birth,emp_observations)
        values
          (#empId#, #empFirstName#, #empLastName#, #empAvailability#, #empMail#, #empMsn#, #empAddress#, #empPhoneNumber#, #empMobileNumber#, #empLocation#, #empBirth#, #empObservations#)
         
  </insert>
  
  <insert id="insertEmployeesRates" parameterClass="com.twoways.to.EmployeesRatesTO"   >
    insert into employees_rates
           (employees_emp_id, emr_value, rates_rat_id)
    values
          (#employeesTO.empId#, #emrValue#, #ratesTO.ratId#)
          
  </insert>
  
  <insert id="updateEmployeesRates" parameterClass="com.twoways.to.EmployeesRatesTO"   >
    update  employees_rates
    set  emr_value= #emrValue#
    where
    employees_emp_id = #employeesTO.empId#  and  
    rates_rat_id = #ratesTO.ratId#          
  </insert>
  
  <delete id="deleteEmployeesRates" parameterClass="com.twoways.to.EmployeesRatesTO"   >
    delete  employees_rates
    where
    employees_emp_id = #employeesTO.empId#  and  
    rates_rat_id = #ratesTO.ratId#          
  </delete>
  
  <insert id="insertEmployeesTypes" parameterClass="com.twoways.to.EmployeesTypesTO"   >
    insert into employees_types
           (EMPLOYEES_EMP_ID,  EMPLOYEE_TYPE_ETY_NAME)
    values
          (#employeesTO.empId#, #employeeTypeTO.etyName#)          
  </insert>
  
  <insert id="updateEmployeesTypes" parameterClass="com.twoways.to.EmployeesTypesTO"   >
    update  employees_types
    set  EMPLOYEE_TYPE_ETY_NAME = #etyName#
    where
    employees_emp_id = #employeesTO.empId#          
  </insert>  
  
  <delete id="deleteEmployeesTypes" parameterClass="com.twoways.to.EmployeesTypesTO"   >
    delete  employees_types
    where
    employees_emp_id = #employeesTO.empId# 
  </delete>  
  
  <update  id="updateEmployees" parameterClass="com.twoways.to.EmployeesTO">
      UPDATE employees
      SET     emp_first_name = #empFirstName# , 
              emp_last_name = #empLastName# , 
              emp_availability = #empAvailability#,
              emp_mail = #empMail#,
              emp_msn = #empMsn#  ,
              emp_address =  #empAddress# ,
              emp_phone_number = #empPhoneNumber# ,
              emp_mobile_number =#empMobileNumber# ,
              emp_location= #empLocation#,
              emp_birth = #empBirth#,
              emp_observations = #empObservations#
              WHERE  emp_id = #empId#                     
  </update>
  
  <delete id="deleteEmployee" parameterClass="com.twoways.to.EmployeesTO">
        DELETE Employees
        WHERE  emp_id = #empId#    
 </delete>     
 
  <resultMap id="select-Tipo-Emp" class="com.twoways.to.EmployeeTypeTO" >
       
      <result property="etyName" column="ety_name" />
      <result property="etyDescription" column="ety_description" />
  </resultMap>      
  
  <statement  id="obtenerTipoEmpleado" resultMap="select-Tipo-Emp">
     select *    
     from 
     employee_type
  </statement>   
     
  <resultMap id="select-Emp-Rates" class="com.twoways.to.EmployeesRatesTO" >
      <result property="emrValue" column="EMR_VALUE" />
      <result property="employeesTO.empId" column="EMPLOYEES_EMP_ID"/>
      <result property="ratesTO.ratId" column="RAT_ID" />
      <result property="ratesTO.ratDescription" column="RAT_DESCRIPTION"/>
      <result property="ratesTO.ratName"   column="RAT_NAME" />
      <result property="ratesTO.rateTypesTO.rtyName" column="RAT_TYPE"  />
  </resultMap>
  
  <statement  id="getEmpRatesByEmpId" resultMap="select-Emp-Rates"  parameterClass="com.twoways.to.EmployeesTO" >
     select * from employees_rates cr 
     join rates r 
     on cr.rates_rat_id = r.rat_id 
     and   cr.employees_emp_id=#empId#
  </statement>       

  <resultMap id="select-Emp-Types" class="com.twoways.to.EmployeesTypesTO">
      <result property="employeesTO.empId" column="EMPLOYEES_EMP_ID"/>
      <result property="employeeTypeTO.etyName" column="EMPLOYEE_TYPE_ETY_NAME" />     
  </resultMap>
  
  <statement  id="getEmpTypesByEmpId" resultMap="select-Emp-Types"  parameterClass="com.twoways.to.EmployeesTO" >
     select * from employees_types cr 
     where cr.employees_emp_id=#empId#
  </statement>  
  
  <!--Monedas -->
 
  <resultMap id="select-Currency" class="com.twoways.to.CurrencyTO" >
       
      <result property="curId" column="cur_id" />
      <result property="curName" column="cur_Name" />
  </resultMap> 
   
  <statement  id="getCurrencyId" resultMap="select-Currency"  parameterClass="java.lang.Integer" >
     select *    
     from 
     Currency
     where cur_id = #value#
  </statement>   
 
  <statement id="obtenerMonedas"  parameterClass="java.lang.String" resultMap="select-Currency" >
     select *    
     from 
     Currency
     
  </statement>

<!--Tarifas-->
  
  <resultMap id="select-Rate-List" class="com.twoways.to.RatesTO" >
      <result property="ratId" column="RAT_ID" />
      <result property="ratDescription" column="RAT_DESCRIPTION"/>
      <result property="ratName"   column="RAT_NAME" />
      <result property="rateTypesTO.rtyName" column="RAT_TYPE"  />
      <result property="currencyTO.curName" column="cur_Name" />    
      <result property="currencyTO.curId" column="cur_Id" />
  </resultMap>
  
  <select id="obtenerTarifas"  parameterClass="java.lang.String" resultClass="com.twoways.to.RatesTO">
     select 
        RAT_ID as ratId,
        RAT_NAME as ratName,
        RAT_TYPE as ratType,
        RAT_DESCRIPTION as ratDescription,
        CUR_NAME as curName
     from 
     Rates r, Currency c
     where r.currency_cur_id = c.cur_id
     
  </select>
  
  <select  id="rates.seq" resultClass="java.lang.Long" parameterClass="java.lang.String" > 
     select rates_seq.nextval ratId from dual
  </select> 

  <insert id="insertRate" parameterClass="com.twoways.to.RatesTO" >
      insert into rates
          (rat_id, rat_type, rat_name, rat_description,currency_cur_id)
        values
          (#ratId#, #rateTypesTO.rtyName#, #ratName#, #ratDescription#, #currencyTO.curId#)                        
  </insert>

  <update  id="updateRate" parameterClass="com.twoways.to.RatesTO">
      UPDATE rates
      SET     rat_name = #ratName# , 
              rat_description = #ratDescription#,
              rat_type = #rateTypesTO.rtyName#,
              currency_cur_id= #currencyTO.curId#
              WHERE  rat_id = #ratId#                     
  </update>  
  
  <select id="obtenerTipoTarifas"  parameterClass="java.lang.String" resultClass="com.twoways.to.RateTypesTO">
     select 
        RTY_NAME as rtyName,
        RTY_DESCRIPTION as rtyDescription
     from 
     Rate_Types
     
  </select>
    
 <select  id="getRatesByType" parameterClass="com.twoways.to.RateTypesTO" resultMap="select-Rate-List">
     select *
     from Rates r left outer  join Currency c on r.currency_cur_id = c.cur_id
     where rat_type = #rtyName#
 </select>   
    
 <select  id="getRateById" parameterClass="java.lang.String" resultMap="select-Rate-List">
     select *
     from Rates r left outer  join Currency c on r.currency_cur_id = c.cur_id
     where rat_id = #value#
 </select>

  <delete id="deleteRates" parameterClass="com.twoways.to.RatesTO">
        DELETE Rates
        WHERE  rat_id = #ratId#    
 </delete> 

  <statement id="buscarTarifas" resultMap="select-Rate-List"  parameterClass="java.lang.String" >
     select *       
     from rates, currency 
     where rates.currency_cur_id = currency.cur_id
     and upper(rates.RAT_NAME) like '%' || upper( #value#) || '%'
     order by rates.RAT_NAME
     
  </statement>

<!--Usuarios-->
  <resultMap id="select-User" class="com.twoways.to.UsersTO" >
      <result property="usrFirstName" column="USR_FIRST_NAME" />
      <result property="usrLastName" column="USR_LAST_NAME"/>
      <result property="usrId"   column="USR_ID" />
      <result property="usrMail" column="USR_MAIL"  />
      <result property="usrBirth" column="USR_BIRTH" />
      <result property="usrMobileNumber" column="USR_MOBILE_NUMBER" />
      <result property="usrOfficeNumber" column="USR_OFFICE_NUMBER" />  
      <result property="usrPhoneNumber" column="USR_PHONE_NUMBER" />
      <result property="rolesTO.rolId" column="rol_id" />
      <result property="rolesTO.rolName" column="rol_Name" />
  </resultMap>
  
  <resultMap id="select-User-busq"  class="com.twoways.to.UsersTO" >
      <result property="usrFirstName" column="USR_FIRST_NAME" />
      <result property="usrLastName" column="USR_LAST_NAME"/>
      <result property="usrId"   column="USR_ID" />
      <result property="usrMail" column="USR_MAIL"  />
      <result property="usrBirth" column="USR_BIRTH" />
  </resultMap>

  <select id="obtenerUsuarios"  resultMap="select-User" parameterClass="java.lang.String">
     select * 
       from Users , Roles
      where roles_rol_id=rol_id
     
  </select>  
  
  <statement  id="getUserById" resultMap="select-User" parameterClass="java.lang.String" >
     select *
       from users, Roles 
      where usr_id = #value#
        and roles_rol_id=rol_id
  </statement>
 
  <statement id="buscarUsuarios" resultMap="select-User-busq"  parameterClass="java.lang.String" >
     select *       
     from users
     where upper(USR_FIRST_NAME) like '%' || upper( #value#) || '%'
     
  </statement>

  <statement id="buscarUsuariosId" resultMap="select-User-busq"  parameterClass="java.lang.String" >
     select *       
     from users
     where upper(USR_ID) like '%' || upper( #value#) || '%'
     
  </statement>
  
  <insert id="insertUser" parameterClass="com.twoways.to.UsersTO" >
      insert into users
          (USR_ID, USR_PASS, USR_FIRST_NAME, USR_LAST_NAME, USR_MAIL, USR_BIRTH, USR_MOBILE_NUMBER, USR_OFFICE_NUMBER, USR_PHONE_NUMBER,roles_rol_id)
        values
          (#usrId#, #usrPass#, #usrFirstName#, #usrLastName#, #usrMail#, #usrBirth#, #usrMobileNumber#, #usrOfficeNumber#, #usrPhoneNumber#,#rolesTO.rolId#)
                            
  </insert>
  
   <update  id="updateUsers" parameterClass="com.twoways.to.UsersTO">
      UPDATE users
      SET     USR_FIRST_NAME = #usrFirstName# , 
              USR_LAST_NAME = #usrLastName#,
              USR_MAIL = #usrMail#,
              USR_BIRTH = #usrBirth#  ,
              USR_MOBILE_NUMBER =  #usrMobileNumber# ,
              USR_OFFICE_NUMBER = #usrOfficeNumber# ,
              USR_PHONE_NUMBER =#usrPhoneNumber# ,
              roles_rol_id= #rolesTO.rolId#
              WHERE  usr_id = #usrId#                     
  </update>
  
  <delete id="deleteUsers" parameterClass="com.twoways.to.UsersTO">
        DELETE Users
        WHERE  usr_id = #usrId#    
 </delete>

 <statement id="obtenerRoles"  resultClass="com.twoways.to.RolesTO" parameterClass="java.lang.String">
     select  rol_id as rolId,
             rol_Name as rolName, 
             rol_description as rolDescription 
     from Roles     
  </statement>  
  
  <!-- Items -->
  <select  id="items.seq" resultClass="java.lang.Long" parameterClass="java.lang.String" > select item_seq.nextval itmId from dual</select> 
  

  <insert id="insertItem" parameterClass="com.twoways.to.ItemsTO" >
      insert into items
          (itm_id, itm_type, itm_name, itm_description)
        values
          (#itmId#, #itmType#, #itmName#, #itmDescription#)                        
  </insert>

  <update  id="updateItem" parameterClass="com.twoways.to.ItemsTO">
      UPDATE items
      SET     itm_name = #itmName# , 
              itm_description = #itmDescription#,
              itm_type = #itmType#
      WHERE  itm_id = #itmId#                     
  </update>  
  
  <resultMap id="select-Item-List"  class="com.twoways.to.ItemsTO" >
      <result property="itmName" column="ITM_NAME" />
      <result property="itmId"   column="ITM_ID" />
      <result property="itmType" column="ITM_TYPE"  />
      <result property="itmDescription" column="ITM_DESCRIPTION" />
  </resultMap>
    
  <statement id="buscarItems" resultMap="select-Item-List"  parameterClass="java.lang.String" >
     select *       
     from items
     where upper(items.ITM_NAME) like '%' || upper( #value#) || '%'
     order by items.ITM_NAME
     
  </statement>

  <delete id="deleteItem" parameterClass="com.twoways.to.ItemsTO">
        DELETE Items
        WHERE  itm_id = #itmId#    
 </delete> 
  
   <select  id="getItemById" parameterClass="java.lang.String" resultMap="select-Item-List">
     select *
     from Items r 
     where itm_id = #value#
 </select>
  
  <!-- Translator 
  <select  id="traductores.seq" resultClass="java.lang.Long" parameterClass="java.lang.String" > select translator_seq.nextval traId from dual</select> 

  <insert id="insertarTraductor" parameterClass="com.twoways.to.TranslatorsTO" >
      insert into translators
          (tra_id, tra_specialization, languagues_lan_id, languagues_lan_id1, languagues_lan_id2, employees_emp_id, tra_editor)
        values
          (#traId#, #traSpecialization#, #LanguaguesTO.lanId#, #LanguaguesTO.lanId1#, #LanguaguesTO.lanId2#, #employeesTO.empId#, #traEditor#)                        
  </insert>

  <update  id="updateTraductor" parameterClass="com.twoways.to.TranslatorsTO">
      UPDATE translators
      SET     tra_specialization = #traSpecialization# , 
              languagues_lan_id = #LanguaguesTO.lanId#,
              languagues_lan_id1 = #LanguaguesTO.lanId1#,
              languagues_lan_id2 = #LanguaguesTO.lanId2#,              
              tra_editor = #traEditor#
      WHERE  tra_id = #traId#                     
  </update>  
  
  <resultMap id="select-Trad-List"  class="com.twoways.to.TranslatorsTO" >
      <result property="traSpecialization" column="tra_specialization" />
      <result property="LanguaguesTO.lanId"   column="languagues_lan_id" />
      <result property="LanguaguesTO.lanId1" column="languagues_lan_id1"  />
      <result property="LanguaguesTO.lanId2" column="languagues_lan_id2"  />      
      <result property="traEditor" column="tra_editor" />
      <result property="EmployeesTO.EmpId" column="employees_emp_id" />      
      <result property="EmployeesTO.empFirstName" column="emp_first_name" />    
      <result property="EmployeesTO.empLastName" column="emp_last_name" />          
  </resultMap>
    
  <resultMap id="select-TradId-List"  class="com.twoways.to.TranslatorsTO" >
      <result property="traSpecialization" column="tra_specialization" />
      <result property="LanguaguesTO.lanId"   column="languagues_lan_id" />
      <result property="LanguaguesTO.lanId1" column="languagues_lan_id1"  />
      <result property="LanguaguesTO.lanId2" column="languagues_lan_id2"  />      
      <result property="traEditor" column="tra_editor" />
      <result property="EmployeesTO.EmpId" column="employees_emp_id" />   
  </resultMap>
  
  <statement id="buscarTraductores" resultMap="select-Trad-List"  parameterClass="java.lang.String" >
     select *       
     from translators t, employees e
     where t.employees_emp_id = e.emp_id
     and upper(e.emp_last_name) like '%' || upper( #value#) || '%'
     order by e.emp_last_name
     
  </statement>

  <delete id="deleteTraductor" parameterClass="com.twoways.to.TranslatorsTO">
        DELETE translators
        WHERE  tra_id = #traId#    
 </delete> 
  
   <select  id="getTraById" parameterClass="java.lang.String" resultMap="select-TradId-List">
     select *
     from translators 
     where tra_id = #value#
 </select>
-->
  <statement id="getPass"  resultClass="java.lang.String" parameterClass="java.lang.String">
     select  usr_pass
     from  users 
     where usr_id = #value#      
  </statement>  



</sqlMap> 
